/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };
&mt { quick_tap_ms = <200>; };
&sk {
    release-after-ms = <2000>;
    quick-release;
    ignore-modifiers;
};


/ {
    behaviors {
        cmt: custom_mode_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "CUSTOM_MODE_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <1000>;
            quick-tap-ms = <250>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };
    keymap {
        compatible = "zmk,keymap";
        
        default_layer {
            bindings = <
//0       1       2             3             4                  5              6                  7               8               9             10            11         12           13
//        14      15            16            17                 18             19                 20              21              22            23            24         25           26
//        27      28            29            30                 31             32                 33              34              35            36            37         38           38
//                                            39                 40             41                 42              44              45
&none   &sk LALT    &kp B       &kp F       &kp J           &kp T       &kp BSPC                &kp BSPC        &kp T           &kp J           &kp F       &kp B       &sk RALT    &none
        &sk LSHIFT  &kp D       &kp H       &kp N           &kp Y       &kp C                   &kp C           &kp Y           &kp N           &kp H       &kp D       &sk RSHIFT  
        &sk LCTRL   &none       &kp FSLH    &kp LS(FSLH)    &none       &none                   &none           &none           &kp LS(FSLH)    &kp FSLH    &none       &sk RCTRL

                                &lt RSE LS(FSLH)        &kp SPACE       &lt LWR LSHFT           &lt LWR RSHFT   &kp SPACE   &lt RSE LS(FSLH)
            >;
                };
                lower_layer {
                        bindings = <
  &none   &mt LGUI F1      &kp F2     &kp F3   &kp F4        &kp F5     &kp F6      &kp F7      &kp F8     &kp F9        &kp F10    &kp F11    &kp F12           &none
          &mt LCTRL PLUS   &kp EXCL   &kp AT   &kp HASH      &kp DLLR   &kp PRCNT   &kp CARET   &kp AMPS   &kp STAR      &kp LPAR   &kp RPAR   &mt RCTRL MINUS
          &mt LALT EQUAL   &kp N1     &kp N2   &kp N3        &kp N4     &kp N5      &kp N6      &kp N7     &kp N8        &kp N9     &kp N0     &kp RALT
                                               &lt ADJ TAB   &trans     &trans      &trans      &trans     &lt ADJ DEL
                        >;
                };

                raise_layer {
                        bindings = <
  &none   &mt LGUI KP_NUM   &kp KP_SLASH      &kp KP_N7   &kp KP_N8   &kp KP_N9   &kp KP_MINUS   &kp C_VOL_UP   &kp HOME   &kp PSCRN   &kp PG_UP   &kp SLCK          &kp CLCK           &none
          &mt LCTRL EQUAL   &kp KP_MULTIPLY   &kp KP_N4   &kp KP_N5   &kp KP_N6   &kp KP_PLUS    &kp C_MUTE     &kp LEFT   &kp UP      &kp RIGHT   &kp INS           &mt RCTRL  K_APP
          &kp LALT          &kp KP_N0         &kp KP_N1   &kp KP_N2   &kp KP_N3   &kp KP_DOT     &kp C_VOL_DN   &kp END    &kp DOWN    &kp PG_DN   &kp PAUSE_BREAK   &kp RALT
                                                          &trans      &trans      &lt ADJ RET    &lt ADJ ESC    &trans     &trans
                        >;
                };
                adjust_layer {
                        bindings = <
  &none   &bootloader   &none          &none          &none          &none          &none          &none          &none          &none          &none          &none          &bootloader   &none
          &bt BT_CLR    &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &bt BT_SEL 4   &bt BT_SEL 3   &bt BT_SEL 2   &bt BT_SEL 1   &bt BT_SEL 0   &bt BT_CLR
          &reset        &none          &none          &none          &none          &none          &none          &none          &none          &none          &none          &reset
                                                      &trans         &none          &trans         &none          &trans         &trans
                        >;
                };
        };
};
